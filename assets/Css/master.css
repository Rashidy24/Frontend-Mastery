* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  cursor: url(../Imgs/cursor.png), pointer;
}

:root {
  --main-color: #1D1F26;
  --sec-color: #484c5b;
  --sec-color-card: #343741;
  --cel-color: #111420;
  /* #161923 */
  --text-color: #fff;
}
body {
  background-color: var(--main-color);
}

ul li {
  list-style-type: none;
}

a {
  text-decoration: none;
}
::-webkit-scrollbar {
    width: 8px;
}
::-webkit-scrollbar-thumb {
    background-color: #111420;
}
::-webkit-scrollbar-track {
    background-color: #1D1F26;
}

@keyframes blinkCursor {
    50% {
      border-right-color: transparent;
    }
}
  
@keyframes typeAndDelete {
    0%,
    10% {
      width: 0;
    }
    45%,
    55% {
      width: 6.2em;
    } 
    90%,
    100% {
      width: 0;
    }
}
  .pre-loader {
    position: fixed;
    inset: 0;
  }
  .terminal-loader {
    border: 0.1em solid #111420;
    background-color: #1D1F26;
    color: #0f0;
    font-family: "Courier New", Courier, monospace;
    font-size: 1em;
    padding: 1.5em 1em;
    width: 12em;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    /* border-radius: 4px; */
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    width: 100%;
    height: 100vh;
  }
  
  .terminal-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1.5em;
    background-color: #111420;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    padding: 0 0.6em;
    box-sizing: border-box;
  }
  
  .terminal-controls {
    float: right;
  }
  
  .control {
    display: inline-block;
    width: 0.6em;
    height: 0.6em;
    margin-left: 0.4em;
    border-radius: 50%;
    background-color: #777;
  }
  
  .control.close {
    background-color: #e33;
  }
  
  .control.minimize {
    background-color: #ee0;
  }
  
  .control.maximize {
    background-color: #0b0;
  }
  
  .terminal-title {
    float: left;
    line-height: 1.5em;
    color: #eee;
  }
  
  .text {
    display: inline-block;
    font-weight: 25px;
    white-space: nowrap;
    overflow: hidden;
    border-right: 0.2em solid green; /* Cursor */
    animation:
      typeAndDelete 4s steps(11) infinite,
      blinkCursor 0.5s step-end infinite alternate;
    margin-top: 1.5em;
  }
  


  .hidden-header {
    display: flex;
    justify-content: center;
    input {
      display: none;
    }
  }
  .label-click {
    display: block;
    width: 100px;
    height: 20px;
    border-radius: 50%;
    background-color: var(--sec-color);
    transform: translateY(-50%);
  }

  input:checked ~ .links-container {
    visibility: visible; 
    opacity: 1;
    clip-path: inset(0 0 0 0);
  }

  input:checked ~ .overlay {
    position: fixed;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(20px);
    top: 0;
    left: 0;
    right: 0;
  }
  .links-container {
    clip-path: inset(0 0 100% 0);
    visibility: hidden; 
    opacity: 0;
    transition: .5s;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    > nav {
      position: relative;
      background-color: transparent;
      width: 300px;
      height: 300px;
      a , .Xmark {
        /* cursor: pointer; */
        background-color: #0d0d0d;
        box-shadow:
        inset 0 1px 1px 1px rgba(0, 0, 0, 0.5),
        0 1px 0 0 rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 60px;
        height: 60px;
        > i {
          font-size: 30px;
          color: var(--current-color);
        }
      }
      > a:first-of-type {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
      }
      > a:nth-of-type(2) {
        position: absolute;
        top: 50%;
        left: 0;
        transform: translatey(-50%);
      }
      > a:nth-of-type(3) {
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
      }
      > a:nth-of-type(4) {
        position: absolute;
        top: 50%;
        right: 0;
        transform: translatey(-50%);
      }
      .Xmark {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }
